  import { GoogleSpreadsheet } from 'npm:google-spreadsheet';
  import { JWT } from 'npm:google-auth-library';
  import { load } from "https://deno.land/std@0.224.0/dotenv/mod.ts";


  async function getAuthenticatedDoc() {
    

  const env = await load();


  const serviceAccountAuth = new JWT({
    // env var values here are copied from service account credentials generated by google
    // see "Authentication" section in docs for more info
    email: Deno.env.get("CLIENT_EMAIL")! || env.CLIENT_EMAIL,
    key: atob(Deno.env.get("PRIVATE_KEY"))!|| env.PRIVATE_KEY,
    scopes: ["https://www.googleapis.com/auth/spreadsheets",
    ],
  });

  const doc = new GoogleSpreadsheet(Deno.env.get("SHEET_ID")!||env.SHEET_ID, serviceAccountAuth);

  await doc.loadInfo(); // loads document properties and worksheets
  return doc;
  }







  type UsersRowData = {
    "Email Address": string;
    "Verified?": string;
    "LinkedIn Profile (Will be visible to other members)": string;
    "Short Bio (Will be visible to other members)": string;
    
  };

  async function getUserRows(): Promise<UsersRowData[]> {
    const doc = await getAuthenticatedDoc();
    const sheet = doc.sheetsByIndex[0];
    const rows = await sheet.getRows<UsersRowData>();
    return rows;
  }
  // Get the "Verified?" status for a specific email
  export async function getVerificationStatus(email: string): Promise<string> {
    const rows = await getUserRows();

    for (const row of rows) {
      if (row.get("Email Address") === email) {
        return row.get("Verified?");
      }
    }

    return "not founc"; // Email not found
  }


